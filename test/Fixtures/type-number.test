--TEST--
Tests the number input type. The range input type works exactly the same.
--HTML-FORM--
<form action="/" method="post">
    <input type="number" name="valid_int" />
    <input type="number" name="valid_min" min="4" />
    <input type="number" name="valid_min_edge" min="4" />
    <input type="number" name="valid_max" max="8" />
    <input type="number" name="valid_max_edge" max="8" />
    <input type="number" name="valid_step_int" step="2" />
    <input type="number" name="valid_step_float" step="0.01" />
    <input type="number" name="valid_step_any_int" step="any" />
    <input type="number" name="valid_step_any_float" step="any" />
    <input type="number" name="valid_between_default" min="4" max="8" />
    <input type="number" name="valid_between_step" min="4" max="8" step="2" />

    <input type="number" name="invalid_text" />
    <input type="number" name="invalid_min" min="4" />
    <input type="number" name="invalid_max" max="8" />
    <input type="number" name="invalid_step" step="2" />
    <input type="number" name="invalid_between_step" min="4" max="8" step="2" />
</form>
--DEFAULT-VALUES--
{
}
--SUBMITTED-VALUES--
{
    "valid_int": "6",
    "valid_min": "6",
    "valid_min_edge": "4",
    "valid_max": "6",
    "valid_max_edge": "4",
    "valid_step_int": "6",
    "valid_step_float": "6.01",
    "valid_step_any_int": "1",
    "valid_step_any_float": "6.01",
    "valid_between_default": "6",
    "valid_between_step": "6",

    "invalid_text": "abcd",
    "invalid_min": "2",
    "invalid_max": "10",
    "invalid_step": "1",
    "invalid_between_step": "3"
}
--EXPECTED-VALUES--
{
    "valid_int": "6",
    "valid_min": "6",
    "valid_min_edge": "4",
    "valid_max": "6",
    "valid_max_edge": "4",
    "valid_step_int": "6",
    "valid_step_float": "6.01",
    "valid_step_any_int": "1",
    "valid_step_any_float": "6.01",
    "valid_between_default": "6",
    "valid_between_step": "6",

    "invalid_text": "abcd",
    "invalid_min": "2",
    "invalid_max": "10",
    "invalid_step": "1",
    "invalid_between_step": "3"
}
--EXPECTED-FORM--
--EXPECTED-ERRORS--
{
    "invalid_text": [
        "notInt",
        "typeInvalid"
    ],
    "invalid_min": [
        "notGreaterThanInclusive"
    ],
    "invalid_max": [
        "notLessThanInclusive"
    ],
    "invalid_step": [
        "stepInvalid"
    ],
    "invalid_between_step": [
        "notGreaterThanInclusive",
        "stepInvalid"
    ]
}
